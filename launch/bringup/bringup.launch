<?xml version="1.0"?>
<launch>
    <arg name="robot_name"            default="$(env ROBOT_NAME)" />
    <arg name="ds4"                   default="$(env DS4)" />
    <arg name="base_frame"            default="base_footprint" />
    <arg name="output"                default="screen" />
    <arg name="front_lidar_ip"        default="192.168.1.3" />
    <arg name="back_lidar_ip"         default="192.168.1.4" />
    <arg name="io_port"               default="/dev/ttyIOModule"/>
    <arg name="bms_port"              default="/dev/ttyDalyBMS"/>
    <arg name="driver_port"           default="/dev/ttyRoboteqDriver"/>
    <arg name="ws_port"               default="9090"/>


    <!-- URDF launch -->
    <include file="$(find camel_robot)/launch/bringup/urdf.launch">
        <arg name="robot_name"            value="$(arg robot_name)" />
        <arg name="base_frame"            value="$(arg base_frame)" />
        <arg name="output"                value="$(arg output)" />
    </include>


    <!-- SICK lidars & Scans Merger launch -->
    <include file="$(find camel_robot)/launch/bringup/sick_lidars.launch">
        <arg name="front_lidar_ip"        value="$(arg front_lidar_ip)" />
        <arg name="back_lidar_ip"         value="$(arg back_lidar_ip)" />
        <arg name="robot_name"            value="$(arg robot_name)" />
        <arg name="output"                value="$(arg output)" />
    </include>


    <!-- I/O module launch -->
    <include file="$(find camel_robot)/launch/bringup/io_module.launch">
        <arg name="port"        value="$(arg io_port)"/>
	    <arg name="baudrate"    value="9600"/>
        <arg name="output"      value="$(arg output)" />
    </include>


    <!-- DalyBMS launch -->
    <include file="$(find camel_robot)/launch/bringup/bms.launch">
        <arg name="serial_port"           value="$(arg bms_port)" />
        <arg name="output"                value="$(arg output)" />
    </include>


    <!-- Roboteq Driver & Encoder launch -->
    <include file="$(find camel_robot)/launch/bringup/motordriver.launch">
        <arg name="output"                value="$(arg output)" />
        <arg name="robot_name"            value="$(arg robot_name)" />
        <arg name="base_frame"            value="$(arg base_frame)" />
        <arg name="serial_port"           value="$(arg driver_port)" />
    </include>


    <!-- Joystick launch -->
    <include file="$(find camel_robot)/launch/bringup/joystick.launch">
        <arg name="ds4"                   value="$(arg ds4)" />
        <arg name="output"                value="$(arg output)" />
    </include>


    <!-- ZED Camera launch -->
    <include file="$(find camel_robot)/launch/bringup/zed_camera.launch">
        <arg name="robot_name"            value="$(arg robot_name)" />
        <arg name="base_frame"            value="$(arg base_frame)" />
        <arg name="output"                value="$(arg output)" />
    </include>


    <!-- Depth Image to Laser Scan Node -->
    <node name="depthimage_to_laserscan" pkg="depthimage_to_laserscan" type="depthimage_to_laserscan" args="">
        <remap from="image"             to="/$(arg robot_name)/front/zed2/depth/depth_registered"/>
        <remap from="camera_info"       to="/$(arg robot_name)/front/zed2/depth/camera_info"/>
        <param name="scan_height"       type="int"    value="60"/>
        <param name="scan_time"         type="double" value="0.066"/>
        <param name="range_min"         type="double" value="0.05"/>
        <param name="range_max"         type="double" value="2.0"/>
        <param name="output_frame_id"   type="str"    value="$(arg robot_name)/zed_front_camera_center"/>
        <remap from="scan"              to="/$(arg robot_name)/depth/scan"/>
    </node>


    <!-- Aruco detector launch -->
    <include file="$(find camel_robot)/launch/bringup/aruco_detect.launch">
        <arg name="robot_name"              value="$(arg robot_name)" />
        <arg name="output"                  value="$(arg output)" />
        <arg name="camera"                  value="/$(arg robot_name)/front/zed2/rgb/image_rect_color/compressed"/>
        <arg name="camera_info"             value="/$(arg robot_name)/front/zed2/rgb/camera_info"/>
    </include>


    <!-- Docking launch -->
    <include file="$(find camel_robot)/launch/bringup/docking.launch">
        <arg name="robot_name"              value="$(arg robot_name)" />
        <arg name="output"                  value="$(arg output)" />
        <arg name="marker_frame"            value="fiducial_1"/>
        <arg name="base_frame"              value="base_link" />
        <arg name="odom_frame"              value="odom"/>
    </include>


    <!-- EKF Robot Localization -->
    <node pkg="robot_localization" type="ekf_localization_node" name="ekf_se" clear_params="true" output="$(arg output)">
        <rosparam command="load" file="$(find camel_robot)/config/slam/ekf_localization_config.yaml" />

        <param name="odom_frame" value="$(arg robot_name)/odom"/>
        <param name="base_link_frame" value="$(arg robot_name)/$(arg base_frame)"/>
        <param name="world_frame" value="$(arg robot_name)/odom"/>

        <param name="odom0" value="/$(arg robot_name)/encoder/odom"/>
        <param name="odom0_queue_size" value="2"/>

        <param name="imu0" value="/$(arg robot_name)/front/zed2/imu/data"/>
        <param name="imu0_queue_size" value="5"/>

        <remap from="/$(arg robot_name)/odometry/filtered" to="/$(arg robot_name)/odometry"/>
        <remap from="/$(arg robot_name)/accel/filtered" to="/$(arg robot_name)/accel"/>

    </node>


    <!-- Hooks Control -->
    <node pkg="camel_robot" type="hook_service.py" name="hooks_service" output="$(arg output)">
        <param name="hook_pin" type="int" value="1"/>
    </node>


    <!-- Robot Status -->
    <node pkg="camel_robot" type="robot_status.py" name="robot_status" output="$(arg output)" />


    <!-- Multimaster -->
    <!-- Multimaster Discovery -->
    <node name="master_discovery" pkg="fkie_master_discovery" type="master_discovery" output="$(arg output)">
        <rosparam command="load" file="$(find camel_robot)/config/bringup/master_disc_config.yaml"/>
    </node>

    <!-- Multimaster Sync -->
    <node name="master_sync" pkg="fkie_master_sync" type="master_sync" output="$(arg output)">
        <rosparam command="load" file="$(find camel_robot)/config/bringup/master_sync_config.yaml"/>
    </node>


    <!-- Rosbridge Websocket -->
    <node name="rosbridge_websocket" pkg="rosbridge_server" type="rosbridge_websocket" output="$(arg output)">
        <rosparam command="load" file="$(find camel_robot)/config/bringup/rosbridge_ws_config.yaml"/>
        <param name="port" value="$(arg ws_port)"/>
        <param name="address" value="$(env ROS_IP)"/>
        <rosparam command="load" file="$(find camel_robot)/config/bringup/rosbridge_glob_config.yaml"/>
    </node>

    <node name="rosapi" pkg="rosapi" type="rosapi_node" output="$(arg output)">
        <rosparam command="load" file="$(find camel_robot)/config/bringup/rosbridge_glob_config.yaml"/>
    </node>

    <!-- TF Web republisher -->
    <node name="tf2_web_republisher" pkg="tf2_web_republisher" type="tf2_web_republisher" output="$(arg output)"/>

</launch>